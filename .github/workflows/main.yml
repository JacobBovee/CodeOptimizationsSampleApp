name: Generate performance fix
on:
  issues:
    types:
      - labeled
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]
jobs:
  get-perf-fix:
    outputs:
      pr-title: ${{ steps.fix.outputs.pr-title }}
      branch-name: ${{ steps.fix.outputs.branch-name }}
    if: github.event.label.name == 'perf'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write
      actions: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
      - name: Fix Perf Issue
        uses: ./ # Uses an action in the root directory
        id: fix
        with:
          repo: ${{ github.event.repository.full_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          issue-title: ${{ github.event.issue.title }}
          issue-body: ${{ github.event.issue.body }}
          issue-number: ${{ github.event.issue.number }}

  run-initial-benchmark:
    if: github.event.label.name == 'perf'
    needs:
      - get-perf-fix
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write
      actions: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "8.0.x" # Ensure this matches the TargetFramework in your .csproj file

      - name: Restore dependencies
        run: dotnet restore
      - name: Run Benchmarks
        run: dotnet run -c Release --project tests/Benchmarks/Benchmarks.csproj
      - name: Upload baseline benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: baseline-results
          path: artifacts/results/


  run-perf-fix-benchmark:
    if: github.event.label.name == 'perf'
    runs-on: ubuntu-latest
    needs:
      - get-perf-fix
    permissions:
      issues: write
      contents: write
      pull-requests: write
      actions: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: '${{ needs.get-perf-fix.outputs.branch-name }}'

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "8.0.x" # Ensure this matches the TargetFramework in your .csproj file

      - name: Restore dependencies
        run: dotnet restore
      - name: Run Benchmarks
        run: dotnet run -c Release --project tests/Benchmarks/Benchmarks.csproj
      - name: Upload baseline benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: postfix-results
          path: artifacts/results/

  compare-benchmarks:
    runs-on: ubuntu-latest
    outputs:
      isImprovement: ${{ steps.compare.outputs.isImprovement }}
      benchmarkResultsMD: ${{ steps.compare.outputs.benchmarkResultsMD }}
    needs:
      - run-initial-benchmark
      - run-perf-fix-benchmark
      - get-perf-fix
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install unzipper
        run: npm install unzipper
      - name: Install actions core
        run: npm install @actions/core

      - name: Compare Benchmark Results
        id: compare
        run: node .github/scripts/compare-benchmarks.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          BASELINE_ARTIFACT: baseline-results
          FIX_ARTIFACT: fix-results
          FIXED_BRANCH: ${{ needs.get-perf-fix.outputs.branch-name }}

  create-pr:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: 
      - compare-benchmarks
      - get-perf-fix
    # if: needs.compare-benchmarks.outputs.isImprovement == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${{ needs.compare-benchmarks.outputs.benchmarkResultsMD }}" > benchmark-results.md 
          gh pr create --title '${{ needs.get-perf-fix.outputs.pr-title }}' --body-file benchmark-results.md --base ${{ github.ref }} --head ${{ needs.get-perf-fix.outputs.branch-name }}